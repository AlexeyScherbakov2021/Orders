<Window x:Name="mainWindow" x:Class="Orders.Views.ReportRoutesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Orders.ViewModels"
        xmlns:local="clr-namespace:Orders.Views"
        xmlns:pr="clr-namespace:DataGridColumnVisibility"
        xmlns:cmd="clr-namespace:Orders.Infrastructure.Commands"
        xmlns:conv="clr-namespace:Orders.Infrastructure.Converters"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        mc:Ignorable="d"
        Title="Отчет по заказам" Height="700" Width="1200" WindowStartupLocation="CenterScreen"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.DataContext>
        <vm:ReportRoutesWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <conv:StatusToIconConverter x:Key="StatusToIconConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="47"/>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <ToolBarPanel Orientation="Horizontal" Grid.Row="0" >
            <Button Margin="5"  Style="{StaticResource ButtonStyleShadow}" 
                    CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ReportRoutesWindow}}}">
                <Button.Command>
                    <cmd:CloseWindowCommand/>
                </Button.Command>
                <DockPanel Margin="4,0">
                    <fa:ImageAwesome Icon="Solid_DoorClosed" Foreground="Blue" Stretch="Uniform" Width="20" Margin="0,0,10,0" 
                                     HorizontalAlignment="Left" Height="20" DockPanel.Dock="Left" />
                    <TextBlock Text="Закрыть" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="14"/>
                </DockPanel>
            </Button>
            <CheckBox Content="+Закрытые" IsChecked="{Binding IsAddClosed, Mode=TwoWay}"
                      Command="{Binding FilterCommand}"
                      VerticalAlignment="Center" Margin="10,0" />
        </ToolBarPanel>

        <Grid Grid.Row="1" Margin="4,4,8,0" Background="#FFE4E4FF">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="14"/>
                <ColumnDefinition Width="{Binding ActualWidth, ElementName=col0}"/>
                <ColumnDefinition Width="{Binding ActualWidth, ElementName=col1}"/>
                <ColumnDefinition Width="{Binding ActualWidth, ElementName=col2}"/>
                <ColumnDefinition Width="{Binding ActualWidth, ElementName=col3}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
                <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
                <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="AllowDrop" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="Margin" Value="2,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                                        Margin="0,4"
                                        >
                                    <DockPanel>
                                        <Button DockPanel.Dock="Right" Command="{Binding ClearFilterCommand, Mode=OneWay}" CommandParameter="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <fa:ImageAwesome Icon="Solid_Times" Foreground="Red" Stretch="Uniform" Width="16" Margin="0" 
                                            Height="10"/>

                                        </Button>
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <fa:ImageAwesome Icon="Solid_Filter" Foreground="Black" Stretch="Uniform" Width="14" Height="14" Margin="0,0,-8,0" ForceCursor="True"/>
            <TextBox Text="{Binding FilterName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Margin="5,0,0,0"/>
            <TextBox Text="{Binding FilterByuer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="3"/>
            <TextBox Text="{Binding FilterCardOrder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="4"/>
        </Grid>



        <DataGrid ItemsSource="{Binding _ListOrderView.View}" Margin="10,2,10,10" Grid.Row="2" IsReadOnly="True" Style="{StaticResource DataGridStyle}">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Resources>
                <pr:BindingProxy x:Key="ColumnVisible" Data="{Binding IsVisibleSumma}"   />
            </DataGrid.Resources>
            <DataGrid.Effect>
                <DropShadowEffect Color="#FFBDBDBD" ShadowDepth="0" BlurRadius="20"/>
            </DataGrid.Effect>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="col0"  Header="Номер" Binding="{Binding o_number}"  />
                <DataGridTextColumn x:Name="col1"  Header="Наименование" Binding="{Binding o_name}"  />
                <DataGridTextColumn x:Name="col2" Header="Покупатель" Binding="{Binding o_buyer}" />
                <DataGridTextColumn x:Name="col3" Header="Карта заказа" Binding="{Binding o_CardOrder}"  />
                <DataGridTemplateColumn Width="160" Header="Статус" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Margin="6, 0" Height="18" Width="18" Source="{Binding RouteStatus.id, Converter={StaticResource StatusToIconConverter}}">
                                    <Image.Effect>
                                        <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="#FF999999"/>
                                    </Image.Effect>
                                </Image>
                                <TextBlock Text="{Binding RouteStatus.sr_name}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!--<DataGridTextColumn x:Name="col4" Header="Статус" Binding="{Binding RouteStatus.sr_name}" />-->
                
                <DataGridTextColumn Header="Инициатор" Binding="{Binding Owner.u_name}"  />
                <DataGridTextColumn Header="Время создания" Binding="{Binding o_date_created, StringFormat=dd.MM.yyyy HH:mm:ss}"  />
                <DataGridTextColumn Header="На этапе" Binding="{Binding WorkUser.u_name}"  />
                <DataGridTextColumn Header="Время на этапе" Binding="{Binding o_LastTimeStep, StringFormat=dd.MM.yyyy HH:mm:ss}"  />
                <DataGridTextColumn Header="Сумма" Binding="{Binding o_summa, StringFormat=N2}" 
                                    Visibility="{Binding Data, Source={StaticResource ColumnVisible}}" CellStyle="{StaticResource CellRight}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
